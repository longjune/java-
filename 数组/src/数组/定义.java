package 数组;

public class 定义 {

	public static void main(String[] args) {
		// 一维：
		// 动态初始化：数据类型[] 数组名=new 数据类型[长度];
		// 静态初始化：数据类型[] 数组名=new 数据类型[]{元素1,元素2,元素3……};
		// 数据类型[] 数组名={元素1,元素2,元素3……};
		// 二维;
		// 动态初始化：数据类型[][] 数据名=new 数据类型[长度1][长度2];
		// 静态初始化：数据类型[][] 数据名={{元素},{元素},{元素}};
		int[] arr = new int[5];
		System.out.println(arr);// [I@1db9742:[表示是一个一维数组，I表示int类型，@为连接符，1db9742表示16进制的内存地址值
		System.out.println(arr[0]);// 数组名配合上0索引，数组名通过地址值到达相应的空间，再通过0索引取到相应的元素（int类型默认值0）

		arr = null;// 将数组的引用置为null（空），此时数组名不指向任何的空间，会引起空指针异常

		// 栈内存（用于执行方法）
		// 2.main方法进行加载
		// 3.进行处理main后的第一个语句int[] arr=
		// 7.此时的arr实际上记录的是一个地址值，可以通过这个地址值来找到堆内存中相应的空间

		// 堆内存（保存具体的对象：例如像是new的对象）
		// 4.在遇到new后跳转到堆内存中开辟空间，执行new int[5];
		// 5.创建一个连续的5个空间，并给索引为0的位置生成一个内存当中的地址值（0x0011）
		// 6.开辟好地址值后会把地址值传给arr

		// 方法区（加载某一个类的.class字节码文件）
		// 1.加载Deemo.class
	}
}
